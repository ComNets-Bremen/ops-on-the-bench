# Generated by Django 3.0 on 2021-08-05 18:09

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('omnetppManager', '0047_omnetppbenchmarksection_omnetppbenchmarksectionconfig_omnetppbenchmarksectionparameters_omnetppbench'),
    ]

    operations = [
        migrations.CreateModel(
            name='OmnetppBenchmarkConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Sections available on the omnetppbenchmark ini file', max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('label', models.CharField(default='<undefined>', help_text='has it is in the Omnetpp Benchmark ini file without the square brackets', max_length=100, unique=True)),
                ('order', models.IntegerField(default=10, help_text='Order the fields manually. Lower number = higher priority', unique=True)),
            ],
            options={
                'ordering': ('order', '-pk'),
            },
        ),
        migrations.CreateModel(
            name='OmnetppBenchmarkForwarderConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OmnetppBenchmarkParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('param_name', models.CharField(max_length=100)),
                ('param_default_value', models.TextField(help_text='has it is in the Omnetpp Benchmark ini file and is not user editable (eg RNG and Forwarding layer)', max_length=1000)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BenchmarkParameters', to='omnetppManager.OmnetppBenchmarkConfig')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='OmnetppBenchmarkForwarderParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('param_name', models.CharField(max_length=100)),
                ('param_default_value', models.CharField(max_length=100)),
                ('param_unit', models.CharField(blank=True, default='', max_length=10)),
                ('user_editable', models.BooleanField(default=False)),
                ('param_description', models.CharField(blank=True, default='', max_length=400)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ForwarderParameters', to='omnetppManager.OmnetppBenchmarkForwarderConfig')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='OmnetppBenchmarkEditableParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('param_name', models.CharField(max_length=100)),
                ('param_default_value', models.CharField(max_length=100)),
                ('param_unit', models.CharField(blank=True, default='', max_length=10)),
                ('user_editable', models.BooleanField(default=False)),
                ('param_description', models.CharField(blank=True, default='', max_length=400)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_BenchmarkParameters', to='omnetppManager.OmnetppBenchmarkConfig')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
    ]
