"""
Django settings for manager project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""


"""
DO NOT EDIT THIS FILE

Settings can be changed by creating a settings_local.py in this directory.
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
        "127.0.0.1",
        "::1",
        "localhost",
        "10.10.160.35",
        "10.10.0.0/16"
        ]


# Application definition

INSTALLED_APPS = [
    'omnetppManager.apps.OmnetppmanagerConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'formtools',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'manager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'omnetppManager.processors.get_general',
            ],
        },
    },
]

WSGI_APPLICATION = 'manager.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

DEFAULT_AUTO_FIELD='django.db.models.AutoField'

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

LOGIN_REDIRECT_URL = '/'

MEDIA_ROOT = str(os.path.abspath(os.path.join(os.getcwd(), "uploads")))

# Settings for the omnetpp.ini upload
OMNETPPINI_MAX_FILESIZE = 100*1024 # 100 kb
OMNETPPINI_ALLOWED_MIMETYPE = [
        "application/x-wine-extension-ini",
        "application/octet-stream",
        "text/plain",
        ]

DEFAULT_SIMULATION_TIMEOUT = "12h"

# Sender mail address
DEFAULT_SENDER_MAIL_ADDRESS = "cn_server@comnets.uni-bremen.de"

DEFAULT_RECEIVER_MAIL_ADDRESS = DEFAULT_SENDER_MAIL_ADDRESS

# Base title for the webpage
DEFAULT_MAIN_TITLE = "OPS on the bench"


storage_backend_id = ""
storage_backend = ""
storage_backend_token = ""

# Redis connection setup
REDIS_DB_HOST       = None
REDIS_DB_PORT       = None
REDIS_DB_PASSWORD   = None

# Overwrite settings by local ones (if available)
try:
    from .local_settings import *
except ImportError as e:
    pass


# At least the following variables should be set in the settings_local.py.
# Give a meaningful error if they are missing
required_fields = ["REDIS_DB_HOST", "REDIS_DB_PORT", "REDIS_DB_PASSWORD", "SECRET_KEY"]

for rf in required_fields:
    if rf not in globals() or not globals()[rf]:
        raise ValueError("The variable \"" + rf + "\" is not set. Please set it in your \"local_settings.py\"")

